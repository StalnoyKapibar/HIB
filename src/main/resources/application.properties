spring.datasource.url=jdbc:postgresql://${RDS_HOSTNAME:localhost}:${RDS_PORT:5433}/${RDS_DB_NAME:postgres}?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useUnicode=yes&characterEncoding=UTF-8&ssl=false
spring.datasource.username=${RDS_USERNAME:postgres}
spring.datasource.password=${RDS_PASSWORD:root}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none

#Application operating mode (dev or prod, leave commented for local)
#spring.profiles.active=prod

server.address=localhost

#enable/disable https
#server.ssl.enabled=true
#ssl ciphers
#server.ssl.ciphers=TLS_RSA_WITH_AES_128_CBC_SHA256
# SSL protocol to use.
#server.ssl.protocol=TLS
# Enabled SSL protocols.
#server.ssl.enabled-protocols=TLSv1.2
spring.jpa.properties.hibernate.search.default.directory_provider=infinispan
spring.jpa.properties.hibernate.search.lucene_version=LATEST
spring.jpa.show-sql=false

#OAuth
#spring.security.oauth2.client.registration.google.client-id = 766389803210-snm5tbiepu3i4e03dmeuleq5uf5u2e73.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret = uQiunGHeEqqY4vWAaVMJ_io8
#OAuth for Google
spring.security.oauth2.client.registration.google.client-id=599156738657-187q8svupojo2amsqpla4iu9varutpk9.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=_Am80ICrs5hH404_f_prePc8
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=email, profile

#OAuth for Facebook
spring.security.oauth2.client.registration.facebook.client-id=299965471209767
spring.security.oauth2.client.registration.facebook.client-secret=5180cd7e871f41586a0b1b1a77cbda56
spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.facebook.scope=email, public_profile
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v3.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v3.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/v3.0/me?fields=name,email

## Укажите значение "copy" (без кавычек) после знака "=", если необходимо восстановить изображения в папках с книгами
## (использовать только в режиме тестирования!!! Данный режим не предназначен для штатной работы!)
spring.application.imagemode=copy

## Укажите значение "clear" (без кавычек) после знака "=", если требуется очищать папку временных изображений с запуском сайта
spring.application.tempPicsMode=

##Mail
spring.mail.host=smtp.gmail.com
spring.mail.username=hibbestproject@gmail.com
spring.mail.password=1357924680F
spring.mail.port=465
spring.mail.protocol=smtps
spring.mail.defaultEncoding=UTF-8
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

##Mail Outbox
spring.mail.imap=imap.gmail.com
spring.mail.imapport=993

##Mail - Feedback notification
spring.mail.subject=Books HIB
spring.mail.request=Your request for this book has been accepted.
spring.mail.answer=The answer will come to this mail.

#GmailController and Gmail Authorization (used in AdminController) config file
googleConfigFile=classpath:gmail.properties
addressUrl=https://localhost:8080

kafka.consumer.id=consumerServer
kafka.producer.id=producerServer
kafka.server=localhost:9092
kafka.group.id=server.broadcast

addressUrl=https://localhost:8080

#Telegram
botUserName = History_in_books_bot
botToken = 1443066393:AAFOXPtc7XAHcnyOgYX14gNmvW7wIIlNEWI
